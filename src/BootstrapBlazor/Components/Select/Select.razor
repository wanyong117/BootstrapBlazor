@namespace BootstrapBlazor.Components
@typeparam TValue
@inherits SelectBase<TValue>

@if (IsShowLabel)
{
    <BootstrapLabel required="@Required" for="@InputId" ShowLabelTooltip="ShowLabelTooltip" Value="@DisplayText" />
}
<div @attributes="AdditionalAttributes" id="@Id" data-bs-toggle="lgbSelect" class="@ClassName" @ref="SelectElement">
    <CascadingValue Value="this" IsFixed="true">
        @Options
    </CascadingValue>
    <RenderTemplate>
        @{
            ResetSelectedItem();
        }
        <div class="@ToggleClassString"  data-bs-toggle="dropdown" aria-expanded="false">
            <input type="text" id="@InputId" readonly disabled="@Disabled" placeholder="@PlaceHolder" class="@InputClassName" value="@SelectedItem?.Text" />
            <span class="@AppendClassName"><i class="fa fa-angle-up"></i></span>
        </div>
        <div class="@DropdownClassString">
			
            @if (ShowSearch)
            {
                <div class="search">
                    <input type="text" class="search-text form-control" onkeyup="@onSearchTextKeyUp" @bind="@SearchText" @bind:event="oninput" />
                    <i class="fa fa-search"></i>
                </div>
            }
            @foreach (var itemGroup in DataSource.GroupBy(i => i.GroupName))
            {
                if (!string.IsNullOrEmpty(itemGroup.Key))
                {
                    <Divider Text="@itemGroup.Key" />
                }
                @foreach (var item in itemGroup)
                {
                    <div class="@ActiveItem(item)" @onclick="@(e => OnItemClick(item))">
                        @if (ItemTemplate != null)
                        {
                            @ItemTemplate(item)
                        }
                        else
                        {
                            @item.Text
                        }
                    </div>
                }
            }
        </div>
        <div class="dropdown-menu-arrow"></div>
    </RenderTemplate>
</div>
<CascadingValue Value="this" IsFixed="true">
    @ChildContent
</CascadingValue>
